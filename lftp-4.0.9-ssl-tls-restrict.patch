diff --git a/src/lftp_ssl.cc b/src/lftp_ssl.cc
index 5bc95ec..0806317 100644
--- a/src/lftp_ssl.cc
+++ b/src/lftp_ssl.cc
@@ -261,6 +261,21 @@ lftp_ssl_gnutls::lftp_ssl_gnutls(int fd1,handshake_mode_t m,const char *h)
    gnutls_set_default_priority(session);
 
    gnutls_transport_set_ptr(session,(gnutls_transport_ptr_t)fd);
+
+   const char *priority=ResMgr::Query("ssl:priority", 0);
+   if(priority && *priority)
+   {
+      int res = gnutls_priority_set_direct(session, priority, 0);
+      if(res != GNUTLS_E_SUCCESS)
+         Log::global->Format(0,"gnutls_priority_set_direct(`%s'): %s\n",priority,gnutls_strerror(res));
+   }
+   else
+   {
+      // hack for some ftp servers
+      const char *auth=ResMgr::Query("ftp:ssl-auth", hostname);
+      if(auth && !strncmp(auth, "SSL", 3))
+         gnutls_priority_set_direct(session, "NORMAL:+SSL3.0:-TLS1.0:-TLS1.1:-TLS1.2",0);
+   }
 }
 void lftp_ssl_gnutls::load_keys()
 {
@@ -751,7 +766,33 @@ lftp_ssl_openssl_instance::lftp_ssl_openssl_instance()
 #else
    SSLeay_add_ssl_algorithms();
    ssl_ctx=SSL_CTX_new(SSLv23_client_method());
-   SSL_CTX_set_options(ssl_ctx, SSL_OP_ALL|SSL_OP_NO_TICKET);
+   long options=SSL_OP_ALL|SSL_OP_NO_TICKET|SSL_OP_NO_SSLv2;
+   const char *priority=ResMgr::Query("ssl:priority", 0);
+   if(priority && *priority)
+   {
+      static const struct ssl_option {
+         const char name[8];
+         long option;
+      } opt_table[] ={
+	 {"-SSL3.0",SSL_OP_NO_SSLv3},
+	 {"-TLS1.0",SSL_OP_NO_TLSv1},
+	 {"-TLS1.1",SSL_OP_NO_TLSv1_1},
+	 {"-TLS1.2",SSL_OP_NO_TLSv1_2},
+	 {"",0}
+      };
+      char *to_parse=alloca_strdup(priority);
+      for(char *ptr=strtok(to_parse,":"); ptr; ptr=strtok(NULL,":")) {
+	 for(const ssl_option *opt=opt_table; opt->name[0]; opt++) {
+	    if(!strcmp(ptr,opt->name)) {
+	       options|=opt->option;
+	       Log::global->Format(9,"ssl: applied %s option\n",ptr);
+	       break;
+	    }
+	 }
+      }
+   }
+
+   SSL_CTX_set_options(ssl_ctx, options);
    SSL_CTX_set_verify(ssl_ctx,SSL_VERIFY_PEER,lftp_ssl_openssl::verify_callback);
 //    SSL_CTX_set_default_passwd_cb(ssl_ctx,lftp_ssl_passwd_callback);
 
diff --git a/src/resource.cc b/src/resource.cc
index fb52383..18502d3 100644
--- a/src/resource.cc
+++ b/src/resource.cc
@@ -349,6 +349,7 @@ static ResType lftp_vars[] = {
    {"ssl:cert-file",		 "",	  ResMgr::FileReadable,0},
    {"ssl:check-hostname",	 "yes",	  ResMgr::BoolValidate,0},
    {"ssl:verify-certificate",	 "no",	  ResMgr::BoolValidate,0},
+   {"ssl:priority",		 "",	  0,0},
 # if USE_OPENSSL
    {"ssl:ca-path",		 "",	  ResMgr::DirReadable,ResMgr::NoClosure},
    {"ssl:crl-path",		 "",	  ResMgr::DirReadable,ResMgr::NoClosure},
diff --git a/doc/lftp.1 b/doc/lftp.1
index 7fc7fe9..050918a 100644
--- a/doc/lftp.1
+++ b/doc/lftp.1
@@ -1568,6 +1568,14 @@ use specified file as your certificate.
 if set to yes, then verify server's certificate to be signed by a known
 Certificate Authority and not be on Certificate Revocation List.
 .TP
+.BR ssl:priority " (string)"
+free form priority string for GnuTLS. If built with OpenSSL the understood
+values are \fI+\fP or \fI-\fP followed by SSL3.0, TLS1.0, TLS1.1 or TLS1.2,
+separated by \fI:\fP. Example:
+.Ds
+set ssl:priority "NORMAL:-SSL3.0:-TLS1.0:-TLS1.1:+TLS1.2"
+.De
+.TP
 .BR torrent:ip " (ipv4 address)"
 IP address for the tracker. Specify it if you are using an http proxy.
 .TP
